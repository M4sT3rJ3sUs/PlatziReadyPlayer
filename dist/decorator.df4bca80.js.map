{"version":3,"sources":["ejercicios/decorator/index.ts"],"names":[],"mappings":"AAAA,IAAA,KAAA;AAAA;AAAA,YAAA;EAIE,SAAA,KAAA,CAAY,KAAZ,EAAmC;IAAnC,IAAA,KAAA,GAAA,IAAA;;IACE,KAAK,KAAL,GAAa,KAAb;IACA,KAAK,MAAL,GAAc,EAAd;IAEA,IAAI,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,GAAvB,CAAnB;IACA,YAAY,CAAC,SAAb,GAAyB,aAAzB;IACA,KAAK,KAAL,CAAW,UAAX,CAAsB,YAAtB,CAAmC,YAAnC,EAAiD,KAAK,KAAL,CAAW,WAA5D;IAEA,KAAK,KAAL,CAAW,gBAAX,CAA4B,OAA5B,EAAqC,YAAA;MACnC,KAAI,CAAC,MAAL,GAAc,EAAd;;MACA,KAAI,CAAC,QAAL;;MACA,YAAY,CAAC,SAAb,GAAyB,KAAI,CAAC,MAAL,CAAY,CAAZ,KAAkB,EAA3C;IACD,CAJD;EAKD;;EAED,KAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA,CAAa,CAAb;;EACF,OAAA,KAAA;AApBA,CAAA,EAAA;;AAsBA,SAAS,sBAAT,CAAgC,KAAhC,EAA4C;EAC1C,IAAI,QAAQ,GAAG,KAAK,CAAC,QAArB;;EAEA,KAAK,CAAC,QAAN,GAAiB,YAAA;IACf,QAAQ;IACR,IAAI,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,KAAxB;;IACA,IAAI,CAAC,KAAL,EAAY;MACV,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,WAAlB;IACD;EACF,CAND;;EAQA,OAAO,KAAP;AACD;;AAED,SAAS,mBAAT,CAA6B,KAA7B,EAAyC;EACvC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAArB;;EAEA,KAAK,CAAC,QAAN,GAAiB,YAAA;IACf,QAAQ;IACR,IAAI,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,KAAxB;;IAEA,IAAI,KAAK,CAAC,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;MAC7B,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,mBAAlB;IACD;EACF,CAPD;;EASA,OAAO,KAAP;AACD;;AAED,IAAI,KAAK,GAAG,IAAI,KAAJ,CAAU,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAV,CAAZ;AACA,KAAK,GAAG,sBAAsB,CAAC,KAAD,CAA9B;AACA,KAAK,GAAG,mBAAmB,CAAC,KAAD,CAA3B","file":"decorator.df4bca80.js","sourceRoot":"..","sourcesContent":["class Field {\n  errors: string[];\n  input: HTMLInputElement;\n\n  constructor(input: HTMLInputElement) {\n    this.input = input;\n    this.errors = [];\n\n    let errorMessage = document.createElement('p');\n    errorMessage.className = 'text-danger';\n    this.input.parentNode.insertBefore(errorMessage, this.input.nextSibling);\n\n    this.input.addEventListener('input', () => {\n      this.errors = [];\n      this.validate();\n      errorMessage.innerText = this.errors[0] || '';\n    });\n  }\n\n  validate() {}\n}\n\nfunction RequiredFieldDecorator(field: Field): Field {\n  let validate = field.validate;\n\n  field.validate = function() {\n    validate();\n    let value = field.input.value;\n    if (!value) {\n      field.errors.push('Requerido');\n    }\n  };\n\n  return field;\n}\n\nfunction EmailFieldDecorator(field: Field): Field {\n  let validate = field.validate;\n\n  field.validate = function() {\n    validate();\n    let value = field.input.value;\n\n    if (value.indexOf('@') === -1) {\n      field.errors.push('Debe ser un email');\n    }\n  };\n\n  return field;\n}\n\nlet field = new Field(document.querySelector('#email'));\nfield = RequiredFieldDecorator(field);\nfield = EmailFieldDecorator(field);\n"]}